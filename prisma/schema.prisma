// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  firstName String
  lastName  String
  password  String   // Added password field for authentication
  phone     String?
  address   String?
  city      String?
  zipCode   String?
  country   String   @default("France")
  role      UserRole @default(CLIENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  contracts Contract[]
  payments  Payment[]
  messages  Message[]

  @@map("users")
}

model InsuranceOffer {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  coverage    Json // Array of coverage items stored as JSON
  features    Json // Array of features stored as JSON
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  contracts Contract[]

  @@map("insurance_offers")
}

model Contract {
  id               String        @id @default(cuid())
  contractNumber   String        @unique
  userId           String
  offerId          String
  status           ContractStatus @default(DRAFT)
  startDate        DateTime?
  endDate          DateTime?
  monthlyPremium   Float
  signedAt         DateTime?
  documentUrl      String?
  personalData     Json? // Store form data as JSON
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt

  // Relations
  user    User            @relation(fields: [userId], references: [id])
  offer   InsuranceOffer  @relation(fields: [offerId], references: [id])
  payments Payment[]

  @@map("contracts")
}

model Payment {
  id            String        @id @default(cuid())
  userId        String
  contractId    String
  amount        Float
  status        PaymentStatus @default(PENDING)
  paymentMethod String // "card" or "sepa"
  stripePaymentId String?
  dueDate       DateTime
  paidAt        DateTime?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  // Relations
  user     User     @relation(fields: [userId], references: [id])
  contract Contract @relation(fields: [contractId], references: [id])

  @@map("payments")
}

model Message {
  id        String      @id @default(cuid())
  userId    String
  subject   String
  content   String
  status    MessageStatus @default(UNREAD)
  isFromAdmin Boolean   @default(false)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id])

  @@map("messages")
}

enum UserRole {
  CLIENT
  ADMIN
}

enum ContractStatus {
  DRAFT
  PENDING_SIGNATURE
  ACTIVE
  CANCELLED
  EXPIRED
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  CANCELLED
}

enum MessageStatus {
  UNREAD
  READ
  REPLIED
}
